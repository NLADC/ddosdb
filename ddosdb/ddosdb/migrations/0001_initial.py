# Generated by Django 3.2.12 on 2022-03-06 01:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_rest_multitokenauth', '0003_pk_migration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fingerprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': [('upload_fingerprint', 'Can upload fingerprints'), ('view_nonsync_fingerprint', 'Can view non-shared fingerprints'), ('edit_comment_fingerprint', 'Can edit comments of fingerprints'), ('edit_sync_fingerprint', 'Can change shareability of fingerprints')],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DDoSToken',
            fields=[
                ('multitoken_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_rest_multitokenauth.multitoken')),
                ('description', models.CharField(default='', max_length=256, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'permissions': [('add_own_token', 'Can add own Tokens'), ('view_own_token', 'Can view own Tokens'), ('delete_own_token', 'Can delete own Tokens')],
            },
            bases=('django_rest_multitokenauth.multitoken',),
        ),
        migrations.CreateModel(
            name='MISP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A friendly name for the MISP instance', max_length=255, verbose_name='MISP name')),
                ('url', models.URLField(help_text='The base URL for the MISP', verbose_name='MISP URL')),
                ('authkey', models.CharField(help_text='Authentication key for the MISP Automation API', max_length=255, verbose_name='Authentication Key')),
                ('active', models.BooleanField(default=True, help_text='Check this to sync with this MISP')),
                ('push', models.BooleanField(default=True, help_text='Sync towards this MISP')),
                ('pull', models.BooleanField(default=False, help_text='Sync from this MISP')),
                ('check_cert', models.BooleanField(default=True, help_text='Whether to check remote certificate on https')),
            ],
            options={
                'verbose_name_plural': ' MISPs',
            },
        ),
        migrations.CreateModel(
            name='RemoteDdosDb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A friendly name for the remote repository', max_length=255, verbose_name='Remote DDoS-DB name')),
                ('url', models.URLField(help_text='The base URL for the remote sync API', verbose_name='Remote DDoS-DB URL')),
                ('authkey', models.CharField(help_text='Authorization Token for the remote DDoSDB API', max_length=255, verbose_name='Authentication Key')),
                ('active', models.BooleanField(default=True, help_text='Check this to sync with this DDoS-DB')),
                ('push', models.BooleanField(default=False, help_text='Sync towards this DDoS-DB')),
                ('pull', models.BooleanField(default=True, help_text='Sync from this DDoS-DB')),
                ('check_cert', models.BooleanField(default=True, help_text='Whether to check remote DDoS-DB certificate on https')),
            ],
            options={
                'verbose_name_plural': ' Remote DDoS-DBs',
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('query', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
